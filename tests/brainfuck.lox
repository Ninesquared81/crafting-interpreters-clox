// This is a brainfuck interpreter written in Lox.
// TODOs:
// 1. implement string indexing/slicing
// 2. write the standard library functions used (len(), encode()/decode())
// 3. ???
// 4. Profit


val ARRAY_CAPACITY = 500;
var data = [0];
for (var i = 1; i < ARRAY_CAPACITY; i = i*2) {
    data = data + data;
}

var dp = 0;

var code;
print "Enter some brainfuck code: ";
input code;

var input_buffer = "";
var bufp = 0;
var loop_stack = [];

for (var ip = 0; ip < len(code); ip = ip + 1) {
    if (code[ip] == ">") {
        dp = dp + 1;
    }
    else if (code[ip] == "<") {
        dp = dp - 1;
    }
    else if (code[ip] == "+") {
        data[dp] = data[dp] + 1;
    }
    else if (code[ip] == "-") {
        data[dp] = data[dp] - 1;
    }
    else if (code[ip] == ",") {
        if (bufp >= len(input_buffer)) {
            input input_buffer;
            bufp = 0;
        }
        data[dp] = encode("ascii", input_buffer[bufp])[0];
        bufp = bufp + 1;
    }
    if (code[ip] == ".") {
        puts(decode("ascii", data[dp]));
    }
    else if (code[ip] == "[") {
        if (data[dp] == 0) {
            var nesting_level = 0;
            ip = ip + 1;
            while (code[ip] != "]" and nesting_level > 0) {
                if (code[ip] == "[") {
                    nesting_level = nesting_level + 1;
                }
                else if (code[ip] == "]") {
                    nesting_level = nesting_level - 1;
                }
                ip = ip + 1;
            }
        }
        else {
            loop_stack = loop_stack + [ip];
        }
    }
    else if (code[ip] == "]") {
        if (data[dp] == 0) {
            loop_stack[-1:] = [];
        }
        else {
            ip = loop_stack[-1];
        }
    }
}

